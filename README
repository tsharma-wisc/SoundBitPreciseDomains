README to install and run SoundBitPreciseDomains project.
First git clone this repository. Let the top folder be SoundBitPreciseDomains be $(SBD_DIR):
---------------------------------------External Dependencies----------------------------------------------------
These steps will install all the external dependencies to the $(SBD_DIR)/external folder:
1) LLVM: This project works with llvm 3.7.1. Install llvm 3.7.1 as follows:
   1) tar -xvf llvm-3.7.1.src.tar.xz && mv llvm-3.7.1.src llvm
   2) tar -xvf cfe-3.7.1.src.tar.xz && mv cfe-3.7.1.src.tar.xz clang
   2) mv clang llvm/tools
   3) mkdir build && cd build
   4) ../llvm/configure --prefix=$(SBD_DIR)/external
   5) Finally, REQUIRES_RTTI=1 make -j <num_cpus>; make install
      (Building with RTTI is crucial to run SBD project as it heavily uses dynamic casts.)
   
2) GMP: 
   1) tar -xvf gmp-6.1.1.tar.bz2
   2) cd gmp-6.1.1
   3) ./configure --prefix=$(SBD_DIR)/external --enable-cxx
   4) make; make check; make install

3) PPL:
   1) unzip ppl-1.2.zip && cd ppl-1.2
   1) ./configure --with-gmp=$(SBD_DIR)/external --prefix=$(SBD_DIR)/external
   2) make; make install

4) Googletest: 
   1) unzip googletest-master.zip && cd googletest-master
   2) cd googletest/googletest/make && make
   - This packages is optional and used only for the unittests.

5) boost:
   1) Download boost_1_61_0.tar.bz2 to the external repository.
   2) tar -xvf boost_1_61_0.tar.bz2

6) WALi:
   1) In the external folder, git clone https://github.com/WaliDev/WALi-OpenNWA.git
   2) scons (Note that you need to install scons)
   3) cp external/WALi-OpenNWA/lib64/libwali.so external/lib

----------------------------------------------------------------------------------------------------------------

Code components:
1) utilities: utils
2) AbstractDomain: 
   a) common: src/AbstractDomain/common
   b) PointsetPowerset: src/AbstractDomain/PointsetPowerset
3) reinterpretation: src/reinterp/wrapped_domain 
4) Analysis: src/analysis

----------------------------------------------------------------------------------------------------------------

Build Instructions:
After setting up the external dependencies, 
1) make
2) make install

----------------------------------------------------------------------------------------------------------------

Running the analysis:
1) Given a example file file.c, obtain the bitcode by the following command:
   external/bin/clang -c -O -emit-llvm file.c -o file.bc
2) LD_LIBRARY_PATH="/nobackup/tsharma/SoundBitPreciseDomains/external/lib;/nobackup/tsharma/SoundBitPreciseDomains/lib" bin/bvsfdAnalysis --filename file.bc --max-disjunctions 1
   (LD_LIBRARY_PATH needs to be set to find the libraries.
3) LD_LIBRARY_PATH="/nobackup/tsharma/SoundBitPreciseDomains/external/lib;/nobackup/tsharma/SoundBitPreciseDomains/lib" bin/bvsfdAnalysis -h to get a list of options.
  (Alternatively, you can use the src/analysis/test/sv-benchmarks/c/wrapped_domain_analysis.py script, it needs python3. The python script can run a whole benchmark using the -i option. See the scripts in src/analysis/test/sv-benchmarks/c for examples.)

----------------------------------------------------------------------------------------------------------------

Benchmarks and scripts:
1) Loop and array sv-bencharks are contained in: src/analysis/test/sv-benchmarks/c
2) Several scripts are present that uses the python script to run the experiments:
   a) src/analysis/test/sv-benchmarks/c/all-examples-oct-script.sh
   b) src/analysis/test/sv-benchmarks/c/all-examples-poly-script.sh
   c) src/analysis/test/sv-benchmarks/c/array-poly-script.sh
   (These scripts need python3 to work.)

----------------------------------------------------------------------------------------------------------------

Running unit tests:
1) CommonUnitTests:
    (a) cd src/AbstractDomain/common/unittests
    (b) make
    (c) Running tests might need the LD_LIBRARY_PATH variable to be set:
        LD_LIBRARY_PATH="$(SBD_DIR)/external/lib" CommonUnitTests
2) PointsetPowerset:
    (a) cd src/AbstractDomain/PointsetPowerset/unittests
    (b) make
    (c) Running tests might need the LD_LIBRARY_PATH variable to be set:
        LD_LIBRARY_PATH="$(SBD_DIR)/external/lib" PointsetPowersetUnitTests

----------------------------------------------------------------------------------------------------------------

For any other question, contact Tushar (tsharma@cs.wisc.edu)
